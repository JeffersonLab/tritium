#------------------------------------------------------------------------------
#  Makefile for standalone executable linked against ROOT
#------------------------------------------------------------------------------
# This part defines overall options and directory locations.
# Change as necessary,

# Compile debug version
#export DEBUG = 1

# Profiling with gprof
# export PROFILE = 1

# Architecture to compile for
ARCH          = linuxegcs
#ARCH          = solarisCC5

#------------------------------------------------------------------------------
# Names of source files and executable name

SRC           = tree2ascii.C
PROGRAM = tree2ascii
EXTRALIBS     = -lTreePlayer

#------------------------------------------------------------------------------
# C++ Analyzer Directory locations
ifdef ANALYZER
INCDIRS  = $(wildcard $(addprefix $(ANALYZER)/, include src hana_decode hana_scaler))
#LIBDIR        = $(shell ./hallalib.sh) 
LIBDIR        = $(ANALYZER)
#ETLIB         = $(shell ./libet.sh)
else
  $(warning $$ANALYZER not defined. You will not be able to process C++ Analyzer trees completely)
endif

#------------------------------------------------------------------------------
# Do not change below here unless you know what you are doing

ROOTCFLAGS   := $(shell root-config --cflags)
ROOTLIBS     := $(shell root-config --libs)
ROOTGLIBS    := $(shell root-config --glibs)

INCLUDES      = $(ROOTCFLAGS) -I$(shell pwd)
ifdef ANALYZER
HALLALIBS     = -L$(LIBDIR) -lHallA -ldc -lscaler $(ETLIB)
INCLUDES     += $(addprefix -I, $(INCDIRS) )
endif

LIBS          = 
GLIBS         = 

ifeq ($(ARCH),solarisCC5)
# Solaris CC 5.0
CXX           = CC
ifdef DEBUG
  CXXFLAGS    = -g
  LDFLAGS     = -g
else
  CXXFLAGS    = -O
  LDFLAGS     = -O
endif
CXXFLAGS     += -KPIC
LD            = CC
SOFLAGS       = -G
endif

ifeq ($(ARCH),linuxegcs)
# Linux with egcs (>= RedHat 5.2)
CXX           = $(shell root-config --cxx)
ifdef DEBUG
  CXXFLAGS    = -g -O0
  LDFLAGS     = -g -O0
else
  CXXFLAGS    = -O
  LDFLAGS     = -O
endif
CXXFLAGS     += -Wall -Woverloaded-virtual -fPIC
LD            = $(shell root-config --ld)
SOFLAGS       = -shared
endif

ifeq ($(CXX),)
$(error $(ARCH) invalid architecture)
endif

CXXFLAGS     += $(INCLUDES)
LIBS         += $(ROOTLIBS) $(SYSLIBS) $(EXTRALIBS)
GLIBS        += $(ROOTGLIBS) $(SYSLIBS) $(EXTRALIBS)

MAKEDEPEND    = $(shell root-config --cc)

ifdef WITH_DEBUG
CXXFLAGS     += -DWITH_DEBUG
endif

ifdef PROFILE
CXXFLAGS     += -pg
LDFLAGS      += -pg
endif

#------------------------------------------------------------------------------

OBJ           = $(SRC:.C=.o)
#HDR           = $(SRC:.C=.h)
DEP           = $(SRC:.C=.d)
OBJS          = $(OBJ)

all:		$(PROGRAM)

$(PROGRAM):	$(OBJS)
		$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LIBS) $(HALLALIBS)
		@echo "$@ done"

clean:
		rm -f *.o *~ $(PROGRAM)

realclean:	clean
		rm *.d

.PHONY: all clean realclean


#------------------------------------------------------------------------------
###--- DO NOT CHANGE ANYTHING BELOW THIS LINE UNLESS YOU KNOW WHAT 
###    YOU ARE DOING

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .C .o .d

%.o:	%.C
	$(CXX) $(CXXFLAGS) -o $@ -c $<

%.d:	%.C
	@echo Creating dependencies for $<
#	@$(SHELL) -ec '$(CXX) -MM $(CXXFLAGS) -c $< \
#		| sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
#		[ -s $@ ] || rm -f $@'
	@$(SHELL) -ec '$(MAKEDEPEND) -MM $(INCLUDES) -c $< \
		| sed '\''s%^.*\.o%$*\.o%g'\'' \
		| sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
		[ -s $@ ] || rm -f $@'

###

-include $(DEP)

